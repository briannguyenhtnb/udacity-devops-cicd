name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18.14'

      - name: Install dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run lint
        run: npm run lint
        working-directory: starter/frontend

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18.14'

      - name: Install dependencies
        run: npm ci
        working-directory: starter/frontend

      - name: Run tests
        run: npm run test
        working-directory: starter/frontend

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '18.14'

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Build Docker image
        run: docker build --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL -t $REPO_URI:$IMAGE_TAG .
        env:
          IMAGE_TAG: ${{ github.sha }}
          REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
          REPO_URI: ${{ vars.FRONTEND_REPO_URI }}
        working-directory: starter/frontend

      - name: Push Docker image to ECR
        run: docker push $REPO_URI:$IMAGE_TAG
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPO_URI: ${{ vars.FRONTEND_REPO_URI }}

      - name: Configure kubeconfig
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kustomize edit set image frontend=$REPO_URI:$IMAGE_TAG
          kustomize build | kubectl apply -f -
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPO_URI: ${{ vars.FRONTEND_REPO_URI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        working-directory: starter/frontend/k8s
